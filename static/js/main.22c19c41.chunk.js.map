{"version":3,"sources":["logo.svg","types.js","containers/home/index.js","actions/index.js","App.js","reportWebVitals.js","reducers/countReducer.js","reducers/todoReducer.js","store/index.js","reducers/removeReducer.js","reducers/userReducer.js","reducers/index.js","store/configureStore.js","containers/login/index.js","containers/register/index.js","index.js"],"names":["ADD_COUNT","DEC_COUNT","ADD_TODO","DEL_TODO","ADD_TODO_SUCCESS","ADD_TODO_FAIL","ADD_TODO_RESET","DEL_TODO_SUCCESS","DEL_TODO_FAIL","ADD_USER","ADD_USER_RESET","CHECK_USER","LOGOUT_USER","Home","props","console","log","countData","prevProps","todoData","this","isLoading","addSubmit","inputVal","_inputValue","value","data","task","key","Date","now","addTodo","className","style","height","user","status","to","onClick","addCount","minusSubmit","type","placeholder","ref","a","map","list","removeData","delTodo","logoutUser","React","Component","mapDispatchToProps","x","payload","dispatch","setTimeout","error","connect","state","count","todo","remove","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","countReducer","action","defaultState","todoReducer","filter","configureStore","reducer","removeReducer","userReducer","username","found","forEach","Object","values","alert","combineReducers","persistConfig","version","storage","persistedReducer","persistReducer","rootReducer","store","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","Login","checkStatus","inputName","_inputName","inputPW","_inputPW","password","checkUser","Register","addUser","ReactDOM","render","StrictMode","loading","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.22c19c41.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const ADD_COUNT = 'ADD_COUNT'\r\nexport const DEC_COUNT = 'DEC_COUNT'\r\nexport const ADD_TODO = 'ADD_TODO'\r\nexport const DEL_TODO = 'DEL_TODO'\r\nexport const ADD_TODO_SUCCESS = 'ADD_TODO_SUCCESS'\r\nexport const ADD_TODO_FAIL = 'ADD_TODO_FAIL'\r\nexport const ADD_TODO_RESET = 'ADD_TODO_RESET'\r\nexport const DEL_TODO_SUCCESS = 'DEL_TODO_SUCCESS'\r\nexport const DEL_TODO_FAIL = 'DEL_TODO_FAIL'\r\nexport const ADD_USER = 'ADD_USER'\r\nexport const ADD_USER_SUCCESS = 'ADD_USER_SUCCESS'\r\nexport const ADD_USER_FAIL = 'ADD_USER_FAIL'\r\nexport const ADD_USER_RESET = 'ADD_USER_RESET'\r\nexport const CHECK_USER = 'CHECK_USER'\r\nexport const LOGOUT_USER = 'LOGOUT_USER'\r\n ","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {connect} from 'react-redux'\r\nimport { addSubmit, minusSubmit, addTodo, delTodo , logoutUser} from \"../../actions\";\r\n\r\n\r\nclass Home extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        console.log(this.props.countData)\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        const {todoData} = this.props\r\n\r\n        if(prevProps.todoData.isLoading && !todoData.isLoading){\r\n            console.log(\"data updated\")\r\n        }\r\n    }\r\n\r\n    addCount(){\r\n        this.props.addSubmit(2);\r\n    }\r\n\r\n    // decCount(){\r\n    //     this.props.minusSubmit(1);\r\n    // }\r\n\r\n    addTodo(){\r\n        const inputVal = this._inputValue.value\r\n        if(inputVal !== ''){\r\n            const data ={\r\n                task: inputVal,\r\n                key: Date.now()\r\n            }\r\n            this.props.addTodo(data)\r\n        }\r\n        this._inputValue.value =\"\"\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"flex flex-col items-center justify-center\" style={{height:'100vh'}}>\r\n                {this.props.user.status == false ? <Redirect to=\"/\" /> : null} \r\n                <h1 className>Count : {this.props.countData}</h1>\r\n                <div>\r\n                    <button onClick={() => this.addCount()} className=\"rounded-lg border-2 border-black p-2 m-1\">Increase</button>\r\n                    <button onClick={() => this.props.minusSubmit(4)} className=\"rounded-lg border-2 border-black p-2 m-1\">Decrease</button>\r\n                </div>\r\n                <div className=\"mt-5\">\r\n                    <div>\r\n                        <input type=\"text\" className=\"border-black border-b-2 p-2 mr-2\" placeholder=\"What to do?\" ref={(a)=> this._inputValue = a}/>\r\n                        {\r\n                            this.props.todoData.isLoading \r\n                            ? <button className=\"border-black border-2 p-2 rounded-lg\">Loading...</button>\r\n                            : <button className=\"border-black border-2 p-2 rounded-lg\" onClick={() => this.addTodo()}>Submit</button>\r\n                        }\r\n                        <ul>\r\n                        {this.props.todoData.data.map(list => <li className=\"border-b-2 border-gray-500 m-3 flex flex-row justify-between\">{list.task}                    \r\n                        {\r\n                            this.props.removeData.isLoading \r\n                            ? <button className=\"text-white bg-red-600 py-1 px-3 rounded-lg\" onClick={() => this.props.delTodo(list.key)}>Loading ... </button>\r\n                            : <button className=\"text-white bg-red-600 py-1 px-3 rounded-lg\" onClick={() => this.props.delTodo(list.key)}>Delete </button>\r\n                        }\r\n\r\n                        </li>)}\r\n                        </ul>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <button className=\"border-black border-2 p-2 rounded-lg m-10\" onClick={this.props.logoutUser}>Logout</button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    countData: state.count,\r\n    todoData: state.todo,\r\n    removeData: state.remove,\r\n    user: state.user\r\n})\r\nconst mapDispatchToProps = {\r\n    addSubmit: addSubmit,\r\n    minusSubmit : minusSubmit,\r\n    addTodo : addTodo,\r\n    delTodo : delTodo,\r\n    logoutUser : logoutUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\r\n// export default Home","import * as type from '../types'\r\n\r\nexport const addSubmit = (x) => {\r\n    return {\r\n        type: type.ADD_COUNT,\r\n        payload: x,\r\n    }\r\n}\r\n\r\nexport const minusSubmit = (x) => {\r\n    return {\r\n        type: type.DEC_COUNT,\r\n        payload: x,\r\n    }\r\n}\r\n\r\nexport const addTodo = (data) => (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: type.ADD_TODO,\r\n        })\r\n        setTimeout(()=> {\r\n            dispatch({\r\n                type: type.ADD_TODO_SUCCESS,\r\n                payload : data  \r\n            })\r\n        }, 1000)\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: type.ADD_TODO_FAIL,\r\n            error: error,\r\n        })\r\n    }\r\n\r\n    // return{\r\n    //     type: type.ADD_TODO,\r\n    //     payload: data\r\n    // }\r\n}\r\n\r\nexport const delTodo = (key) => (dispatch) =>{\r\n    try{\r\n        dispatch({\r\n            type: type.DEL_TODO,\r\n        })\r\n        setTimeout(()=> {\r\n            dispatch({\r\n                type: type.DEL_TODO_SUCCESS,\r\n                payload : key  \r\n            })\r\n        }, 1000)\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: type.DEL_TODO_FAIL,\r\n            error: error,\r\n        })\r\n    }\r\n    // return{\r\n    //     type: type.DEL_TODO,\r\n    //     payload: key\r\n    // }\r\n}\r\n\r\nexport const addUser = (user) => {\r\n        return{\r\n            type: type.ADD_USER,\r\n            payload: user\r\n        }\r\n}\r\n\r\nexport const checkUser = (user) => {\r\n    return{\r\n        type: type.CHECK_USER,\r\n        payload: user\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => {\r\n    return{\r\n        type: type.LOGOUT_USER \r\n    }\r\n}\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Home from './containers/home'\n\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as type from '../types'\r\n\r\n\r\nconst countReducer = (state = 0, action) =>{\r\n    switch(action.type){\r\n        case type.ADD_COUNT:\r\n            return (state += action.payload);\r\n        case type.DEC_COUNT: \r\n            return (state -= action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default countReducer","import * as type from '../types'\r\n\r\nconst defaultState = {\r\n    isLoading: false,\r\n    data : [],\r\n    error : null\r\n}\r\n\r\nconst todoReducer = (state = defaultState, action) =>{\r\n\r\n    switch(action.type){\r\n        case type.ADD_TODO: \r\n            return {\r\n                isLoading : true,\r\n                data: [...state.data],\r\n                error: null, \r\n            }\r\n        case type.ADD_TODO_SUCCESS:\r\n            return {\r\n                isLoading : false,\r\n                data: [...state.data,action.payload],\r\n                error: null, \r\n            }\r\n        case type.ADD_TODO_FAIL:\r\n            return {\r\n                isLoading : false,\r\n                data: [...state.data],\r\n                error: action.error, \r\n            }\r\n        case type.ADD_TODO_RESET:\r\n            return {\r\n                isLoading : false,\r\n                data: [],\r\n                error: action.error, \r\n            }\r\n        case type.DEL_TODO: \r\n            return {\r\n                isLoading : false,\r\n                data : [...state.data],\r\n                error: null,\r\n            }\r\n        case type.DEL_TODO_SUCCESS: \r\n            console.log(action.payload)\r\n            return {\r\n                isLoading : false,\r\n                data : state.data.filter(list =>  list.key !== action.payload),\r\n                error: null,\r\n            }\r\n        case type.DEL_TODO_FAIL: \r\n            return {\r\n                isLoading : false,\r\n                data : [...state.data],\r\n                error: null,\r\n            }\r\n        default: \r\n        return state;\r\n    }\r\n}\r\n\r\nexport default todoReducer","import { configureStore } from '@reduxjs/toolkit'\r\nimport countReducer from '../reducers/countReducer'\r\nimport todoReducer from '../reducers/todoReducer'\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        count: countReducer,\r\n        todo: todoReducer,\r\n    }\r\n})\r\n","import * as type from '../types'\r\n// import {store} from '../store/configureStore'\r\n\r\n\r\nconst defaultState = {\r\n    isLoading: false,\r\n    data : [],\r\n    error : null\r\n}\r\n\r\n// const todoData = store\r\n// console.log(todoData)\r\n\r\nconst removeReducer = (state = defaultState, action) =>{\r\n    switch(action.type){\r\n    case type.DEL_TODO: \r\n        return {\r\n            isLoading : true,\r\n\r\n        }\r\n    case type.DEL_TODO_SUCCESS: \r\n        console.log(action.payload)\r\n        return {\r\n            isLoading : false,\r\n\r\n        }\r\n    case type.DEL_TODO_FAIL: \r\n        return {\r\n            isLoading : false,\r\n\r\n        }\r\n    default: \r\n    return state;\r\n    }\r\n}\r\n\r\n\r\nexport default removeReducer","import * as type from '../types'\r\n\r\nconst defaultState={\r\n    user: [],\r\n    status : false\r\n}\r\n\r\nconst userReducer = (state = defaultState, action) =>{\r\n    switch(action.type){\r\n        case type.ADD_USER:\r\n            return {\r\n                user: [...state.user, action.payload],\r\n                status: false\r\n            }\r\n\r\n        case type.ADD_USER_RESET:\r\n            return  {\r\n                user: [],\r\n                status : false\r\n            }\r\n        case type.CHECK_USER:\r\n            console.log(action.payload.username)\r\n            let found = false\r\n            let status = false\r\n            state.user.forEach(list => {\r\n                if(Object.values(list)[0] == action.payload.username){\r\n                    found = true\r\n                    console.log('found')\r\n                    status = true\r\n                }\r\n            });\r\n            if(found == false){\r\n                alert('User not found')\r\n            }\r\n            return  {\r\n                user: [...state.user],\r\n                status : status\r\n            }\r\n            // break\r\n        case type.LOGOUT_USER:\r\n            return  {\r\n                user: [...state.user],\r\n                status : false\r\n            }\r\n        default:\r\n            return state \r\n    }\r\n}\r\n\r\nexport default userReducer","import { combineReducers } from \"redux\";\r\n\r\nimport countReducer from \"./countReducer\";\r\nimport todoReducer from \"./todoReducer\";\r\nimport removeReducer from './removeReducer';\r\nimport userReducer from \"./userReducer\";\r\n\r\n// const rootReducer = combineReducers({\r\n//     count : countReducer,\r\n//     todo : todoReducer\r\n// })\r\n\r\n// export default rootReducer\r\n\r\nexport default combineReducers({\r\n    count : countReducer,\r\n    todo : todoReducer,\r\n    remove : removeReducer,\r\n    user: userReducer\r\n})","import { configureStore } from '@reduxjs/toolkit'\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n  } from 'redux-persist'\r\n\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\n// import countReducer from '../reducers/countReducer'\r\n// import todoReducer from '../reducers/todoReducer'\r\n\r\nimport rootReducer from '../reducers/index'\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    version: 1,\r\n    storage,\r\n  }\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nconst store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n      getDefaultMiddleware({\r\n        serializableCheck: {\r\n          ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n      }),\r\n  })\r\n  \r\n  let persistor = persistStore(store)\r\n\r\n  export {store, persistor}\r\n\r\n// export default configureStore({\r\n//     reducer: {\r\n//         count: countReducer,\r\n//         todo: todoReducer,\r\n//     }\r\n// })\r\n","import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { checkUser } from \"../../actions\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nclass Login extends React.Component{\r\n\r\n    componentDidUpdate(){\r\n        this.checkStatus()\r\n    }\r\n\r\n    checkUser(){\r\n        const inputName = this._inputName.value\r\n        const inputPW = this._inputPW.value\r\n        if(inputName !== '' && inputPW !== ''){\r\n            const data = {\r\n                username: inputName,\r\n                password: inputPW\r\n            }\r\n            this.props.checkUser(data)\r\n        }\r\n        this._inputName.value =\"\"\r\n        this._inputPW.value =\"\"\r\n    }\r\n    checkStatus(){\r\n        if(this.props.user.status == true){\r\n            console.log('test');\r\n            // window.location.href = 'http://hafiyb.github.io/reactday7/home'\r\n        }\r\n        console.log('historytest')\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        \r\n        return(\r\n            <div className='flex flex-col justify-center items-center ' style={{height:'100vh'}}>\r\n\r\n                {this.props.user.status == true ? <Redirect to=\"/home\" /> : null} \r\n\r\n                <h1 className=\"text-4xl m-10 border-b-2 border-black\">Login</h1>\r\n                <div>\r\n                    <input type=\"text\" className=\"border-black border-b-2 p-2 mr-2\" placeholder=\"Username\" ref={(a)=> this._inputName = a}/>\r\n                    <input type=\"text\" className=\"border-black border-b-2 p-2 mr-2\" placeholder=\"Password\" ref={(a)=> this._inputPW = a}/>\r\n                    <button className=\"border-black border-2 p-2 rounded-lg\" onClick={() => this.checkUser()}>Submit</button>\r\n                </div>\r\n                <Link to=\"/register\" className=\"m-10 border-2 p-2 rounded-md\">Register?</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    user : state.user\r\n})\r\nconst mapDispatchToProps = {\r\n    checkUser : checkUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { addUser } from \"../../actions\";\r\n\r\n\r\nclass Register extends React.Component{\r\n\r\naddUser(){\r\n    const inputName = this._inputName.value\r\n    const inputPW = this._inputPW.value\r\n    if(inputName !== '' && inputPW !== ''){\r\n        const data = {\r\n            username: inputName,\r\n            password: inputPW\r\n        }\r\n        this.props.addUser(data)\r\n    }\r\n    this._inputName.value =\"\"\r\n    this._inputPW.value =\"\"\r\n}\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className='flex flex-col justify-center items-center ' style={{height:'100vh'}}>\r\n                <h1 className=\"text-4xl m-10 border-b-2 border-black\">Register</h1>\r\n                <div>\r\n                    <input type=\"text\" className=\"border-black border-b-2 p-2 mr-2\" placeholder=\"Username?\" ref={(a)=> this._inputName = a}/>\r\n                    <input type=\"text\" className=\"border-black border-b-2 p-2 mr-2\" placeholder=\"Password?\" ref={(a)=> this._inputPW = a}/>\r\n                    <button className=\"border-black border-2 p-2 rounded-lg\" onClick={() => this.addUser()}>Submit</button>\r\n                </div>\r\n                <Link to=\"/\" className=\"m-10 border-2 p-2 rounded-md\">Back to login</Link>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n})\r\nconst mapDispatchToProps = {\r\n    addUser : addUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport configureStore from './store'\n// import configureStore from './store/configureStore'\nimport {Provider} from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react';\nimport {store, persistor} from './store/configureStore'\nimport Login from './containers/login';\nimport Register from './containers/register';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom'\n\n\nReactDOM.render(\n  <React.StrictMode>\n     <Router className=\"App bg-gray-500\">\n      <Provider store={store} >\n        <PersistGate loading={null} persistor={persistor}>\n          <Switch>\n            <Route path =\"/home\" component={App}></Route>\n            \n            <Route path =\"/register\" component={Register}></Route>\n\n            <Route path =\"/\" component={Login}></Route>\n          </Switch>\n        </PersistGate>\n      </Provider>\n    </ Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}